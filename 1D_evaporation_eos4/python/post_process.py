
from t2listing import *
import numpy as np
import matplotlib.pyplot as plt
import csv
import os
from t2data import *
from mpl_toolkits.mplot3d import Axes3D

if not os.path.exists('figure'):
        os.makedirs('figure')

i=0
while i<lst.num_times:

    fig=plt.figure(figsize=(16,20))
    fig.subplots_adjust(hspace=.30,wspace=.2)
    fig.subplots_adjust(left=0.07, right=0.93, top=0.93, bottom=0.05)
	
    ax3=plt.subplot(441)
    ax3.plot(temperature_degree[:,i],element_value,'r1-')
    plt.xlabel('Temperature (Degree)')
    plt.ylabel('x (m)')
    # plt.ylabel('high (m)')
    plt.ylim(1.1,-0.1)
    plt.xlim(20,30)
    #plt.xlim(np.min(temperature_degree),np.max(temperature_degree))
    #ax3.set_yscale('log')
    #plt.ticklabel_format(style='sci', axis='x', scilimits=(0,0)) 
    # ax3.spines['top'].set_color('red')
    # ax3.xaxis.label.set_color('red')
    # ax3.tick_params(axis='x', colors='red')

    ax1=plt.subplot(442)
    ax1.plot(gas_pressure_pa[1:,i]*kpaPpa, element_value[1:],'k1-')
    plt.xlabel('Gas Pressure (Kpa)')
    #ax1.spines['top'].set_color('red')
    plt.ylim(1.1,-0.1)
    plt.xlim(100,104)
    plt.xlim(np.min(gas_pressure_pa[1:]*kpaPpa),np.max(gas_pressure_pa[1:]*kpaPpa))
    #plt.ticklabel_format(style='sci', axis='x', scilimits=(0,0))
    #ax1.set_yscale('log')
    ax2=ax1.twiny()
    ax2.plot(gas_flow_mmPday[:,i],connection_value,'r1-')
    plt.xlabel('Gas Velocity (mm/day)')
    # plt.ylabel('high (m)')
    plt.ylim(1.1,-0.1)
    #plt.xlim(100,115)
    plt.xlim(np.min(gas_flow_mmPday),np.max(gas_flow_mmPday))
    #ax2.set_yscale('log')
    #plt.ticklabel_format(style='sci', axis='x', scilimits=(0,0))
    ax2.spines['top'].set_color('red')
    ax2.xaxis.label.set_color('red')
    ax2.tick_params(axis='x', colors='red')	 

    ax3=plt.subplot(443)
    ax3.plot(vapor_diff_flow_mmPday[:,i]*10,connection_value,'k1-')
    plt.xlabel('Vapor Diffusion ($*10^-1$ mm/day)')
    # plt.ylabel('high (m)')
    plt.ylim(1.1,-0.1)
    plt.xlim(-0.2,5)
    #plt.xlim(np.nanmin(vapor_diff_flow_mmPday)*1.e2,np.nanmax(vapor_diff_flow_mmPday)*1.e2)			
    ax4=ax3.twiny()	
    ax4.plot(liquid_flow_mmPday[:,i]*10,connection_value,'r1-')
    plt.xlabel('Liquid Velocity ($*10^-1$ mm/day)')
    # plt.ylabel('high (m)')
    plt.ylim(1.1,-0.1)
    plt.xlim(-0.2,5)
    #plt.xlim(np.nanmin(liquid_flow_mmPday)*100,np.nanmax(liquid_flow_mmPday)*100)	
    #plt.ticklabel_format(style='sci', axis='x', scilimits=(0,0))
    ax4.spines['top'].set_color('red')	
    ax4.xaxis.label.set_color('red')
    ax4.tick_params(axis='x', colors='red')	 	
    #plt.ticklabel_format(style='sci', axis='x', scilimits=(0,0))    

    ax3=plt.subplot(444)
    ax3.plot(liq_saturation[1:,i]*100,element_value[1:],'k1-')
    plt.xlabel('Liquid saturation (%)')
    # plt.ylabel('high (m)')
    plt.ylim(1.1,-0.1)
    plt.xlim(-5,105)
    #ax3.set_yscale('log')
    ax4=ax3.twiny()
    ax4.plot(capillary_pressure_pa[1:,i]*kpaPpa,element_value[1:],'r1-')
    plt.xlabel('Capillary Pressure (Kpa)')
    # plt.ylabel('high (m)')
    plt.ylim(1.1,-0.1)
    #plt.xlim(-50,0.1)
    plt.xlim(np.min(capillary_pressure_pa[1:]*kpaPpa),np.max(capillary_pressure_pa[1:]*kpaPpa))
    #ax3.set_yscale('log')
    #plt.ticklabel_format(style='sci', axis='x', scilimits=(0,0))
    ax4.spines['top'].set_color('red')	
    ax4.xaxis.label.set_color('red')
    ax4.tick_params(axis='x', colors='red')	 	
    #plt.ticklabel_format(style='sci', axis='x', scilimits=(0,0))    


    ax7=plt.subplot(713)
    ax7.plot(lst.times[:i+1]*dayPs,vapor_diff_flow_top_mmPday[:i+1],'k1-')
    plt.ylabel('Vapor Diffusion\n1st (mm/day)')
    #plt.xlabel('Time (day)')
    #plt.ylim(0.08,0.13)
    plt.ylim(np.min(vapor_diff_flow_top_mmPday),np.max(vapor_diff_flow_top_mmPday))
    plt.xlim(0,np.max(lst.times)*dayPs)
    plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    ax7.set_xscale('log')
    ax8 = ax7.twinx() 
    ax8.plot(lst.times[:i+1]*dayPs,vapor_flow_top_mmPday[:i+1],'r1-',)
    #plt.ylim(-1.3e-1,-6e-2)
    plt.ylim(np.min(vapor_flow_top_mmPday),np.max(vapor_flow_top_mmPday))
    plt.xlim(0,np.max(lst.times)*dayPs)
    plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    plt.ylabel('Vapor Adv\n1st (mm/day)')
    #plt.xlabel('Time (day)')
    ax8.set_xscale('log')
    ax8.spines['right'].set_color('red')
    ax8.yaxis.label.set_color('red')
    ax8.tick_params(axis='y', colors='red')
	
    ax7=plt.subplot(714)
    ax7.plot(lst.times[:i+1]*dayPs,liquid_flow_second_mmPday[:i+1],'k1-')
    plt.ylabel('Liquid Velocity\n2nd (mm/day)')
    #plt.xlabel('Time (day)')
    #plt.ylim(-0.1e-3,0.11e-2)
    plt.ylim(np.min(liquid_flow_second_mmPday),np.max(liquid_flow_second_mmPday))
    plt.xlim(0,np.max(lst.times)*dayPs)
    plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    ax7.set_xscale('log')
    ax8 = ax7.twinx() 
    ax8.plot(lst.times[:i+1]*dayPs,liquid_flow_top_mmPday[:i+1],'r1-',)
    #plt.ylim(-1.e1,1.1e2)
    plt.ylim(np.min(liquid_flow_top_mmPday),np.max(liquid_flow_top_mmPday))
    plt.xlim(0,np.max(lst.times)*dayPs)
    plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    plt.ylabel('Liquid Velocity\n1st (mm/day)')
    #plt.xlabel('Time (day)')
    ax8.set_xscale('log')
    ax8.spines['right'].set_color('red')
    ax8.yaxis.label.set_color('red')
    ax8.tick_params(axis='y', colors='red')		
	
    ax7=plt.subplot(715)
    ax7.plot(lst.times[:i+1]*dayPs,vapor_diff_flow_second_mmPday[:i+1],'k1-')
    plt.ylabel('Vapor Diffusion\n2nd (mm/day)')
    #plt.xlabel('Time (day)')
    #plt.ylim(0.08,0.13)
    plt.ylim(np.min(vapor_diff_flow_second_mmPday),np.max(vapor_diff_flow_second_mmPday))
    plt.xlim(0,np.max(lst.times)*dayPs)
    plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    ax7.set_xscale('log')
    ax8 = ax7.twinx() 
    ax8.plot(lst.times[:i+1]*dayPs,vapor_flow_second_mmPday[:i+1],'r1-',)
    #plt.ylim(-1.3e-1,-6e-2)
    plt.ylim(np.min(vapor_flow_second_mmPday),np.max(vapor_flow_second_mmPday))
    plt.xlim(0,np.max(lst.times)*dayPs)
    plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    plt.ylabel('Vapor Adv\n2nd (mm/day)')
    #plt.xlabel('Time (day)')
    ax8.set_xscale('log')
    ax8.spines['right'].set_color('red')
    ax8.yaxis.label.set_color('red')
    ax8.tick_params(axis='y', colors='red')
	
    ax7=plt.subplot(716)
    ax7.plot(lst.times[:i+1]*dayPs,water_flow_second_mmPday[:i+1],'k1-')
    plt.ylabel('Water Flux\n2nd (mm/day)')
    #plt.xlabel('Time (day)')
    #plt.ylim(-0.1e-3,0.11e-2)
    plt.ylim(np.min(water_flow_second_mmPday),np.max(water_flow_second_mmPday))
    plt.xlim(0,np.max(lst.times)*dayPs)
    plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    ax7.set_xscale('log')
    ax8 = ax7.twinx() 
    ax8.plot(lst.times[:i+1]*dayPs,total_water_flow_second_mm[:i+1],'r1-',)
    #plt.ylim(-1.e1,1.1e2)
    plt.ylim(np.min(total_water_flow_second_mm),np.max(total_water_flow_second_mm))
    plt.xlim(0,np.max(lst.times)*dayPs)
    plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    plt.ylabel('Total water loss\n2nd (mm)')
    #plt.xlabel('Time (day)')
    ax8.set_xscale('log')
    ax8.spines['right'].set_color('red')
    ax8.yaxis.label.set_color('red')
    ax8.tick_params(axis='y', colors='red')			
	
    ax7=plt.subplot(717)
    ax7.plot(lst.times[:i+1]*dayPs,water_generation_vapor_mmPday[:,:i+1][0],'k1-')
    plt.ylabel('Vapor generation\n(mm/day)')
    #plt.xlabel('Time (day)')
    #plt.ylim(-0.1e-3,0.11e-2)
    plt.ylim(-5.5,0.5)
    plt.xlim(0,np.max(lst.times)*dayPs)
    plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    ax7.set_xscale('log')
    ax8 = ax7.twinx() 
    ax8.plot(lst.times[:i+1]*dayPs,water_generation_liquid_mmPday[:,:i+1][0],'r1-',lst.times[:i+1]*dayPs,water_generation_mmPday[:,:i+1][0],'k1-')
    #plt.ylim(-1.e1,1.1e2)
    plt.ylim(-5.5,0.5)
    plt.xlim(0,np.max(lst.times)*dayPs)
    plt.ticklabel_format(style='sci', axis='y', scilimits=(0,0))
    plt.ylabel('Liquid generation\n(mm/day)')
    #plt.xlabel('Time (day)')
    ax8.set_xscale('log')
    ax8.spines['right'].set_color('red')
    ax8.yaxis.label.set_color('red')
    ax8.tick_params(axis='y', colors='red')			

    # ax7=plt.subplot(818)
    # ax7.plot(lst.times[:i+1]*dayPs,water_generation_mmPday[:,:i+1][0],'k1-')
    # plt.ylim(-6,-4)
    # plt.xlim(0,np.max(lst.times)*dayPs)
    # ax7.set_xscale('log')
    # #plt.ylabel('water generation\n(mm/day)')
    # plt.xlabel('Time (day)')
    # ax8 = ax7.twinx() 
    # ax8.plot(lst.times[:i+1]*dayPs,water_generation_mmPday[:,:i+1][0],'r1-',)
    # plt.ylabel('water generation\n(mm/day)')
    # plt.ylim(-6,-4)
    # plt.xlim(0,np.max(lst.times)*dayPs)
    # plt.xlabel('Time (day)')
    # ax8.set_xscale('log')
    # ax8.spines['right'].set_color('red')
    # ax8.yaxis.label.set_color('red')
    # ax8.tick_params(axis='y', colors='red')			

	
    fig.suptitle('time: %6.2e s' %lst.times[i])
    plt.rcParams.update({'font.size':12})
    #fig.tight_layout()
    plt.savefig('figure/output_'+str(i+101)+'.png',dpi=300) 
#    break
    i+=18

#plt.close('all')
#ffmpeg -r 3/1 -start_number 101 -i output_%03d.png -c:v libx264 -r 30 -pix_fmt yuv420p output.mp4